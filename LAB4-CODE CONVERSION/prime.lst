


ARM Macro Assembler    Page 1 


    1 00000000                 AREA             RESET, DATA, READONLY
    2 00000000                 EXPORT           __Vectors
    3 00000000         
    4 00000000         __Vectors
    5 00000000 10000000        DCD              0X10000000
    6 00000004 00000000        DCD              Reset_Handler
    7 00000008                 ALIGN
    8 00000008         
    9 00000008                 AREA             mycode, CODE, READONLY
   10 00000000                 ENTRY
   11 00000000                 EXPORT           Reset_Handler
   12 00000000         
   13 00000000         Reset_Handler
   14 00000000 480F            LDR              R0, =N      ; Load the address 
                                                            of N (upper limit f
                                                            or prime check)
   15 00000002 6800            LDR              R0, [R0]    ; Load the value of
                                                             N into R0
   16 00000004 490F            LDR              R1, =RESULT ; Load the address 
                                                            where we'll store t
                                                            he results
   17 00000006 F04F 0202       MOV              R2, #2      ; Start checking fr
                                                            om 2 (first prime n
                                                            umber)
   18 0000000A F04F 0700       MOV              R7, #0      ; R7 will keep coun
                                                            t of prime numbers 
                                                            found
   19 0000000E         
   20 0000000E         OUTER_LOOP
   21 0000000E 4282            CMP              R2, R0      ; Compare current n
                                                            umber with N
   22 00000010 DC13            BGT              STOP        ; If greater than N
                                                            , we're done
   23 00000012         
   24 00000012 F04F 0302       MOV              R3, #2      ; Divisor starts fr
                                                            om 2
   25 00000016 4614            MOV              R4, R2      ; Copy current numb
                                                            er to R4
   26 00000018         
   27 00000018         INNER_LOOP
   28 00000018 42A3            CMP              R3, R4      ; Compare divisor w
                                                            ith current number
   29 0000001A DA07            BGE              PRIME       ; If divisor >= num
                                                            ber, it's prime
   30 0000001C         
   31 0000001C 4625            MOV              R5, R4      ; Initialize R5 wit
                                                            h the current numbe
                                                            r
   32 0000001E         CHECK_DIVISIBLE
   33 0000001E 1AED            SUBS             R5, R5, R3  ; Subtract divisor 
                                                            from the current nu
                                                            mber
   34 00000020 2D00            CMP              R5, #0      ; Check if the resu
                                                            lt is zero
   35 00000022 D007            BEQ              NOT_PRIME   ; If zero, it's div
                                                            isible, so not prim
                                                            e
   36 00000024 DCFB            BGT              CHECK_DIVISIBLE ; If positive, 
                                                            continue subtractin



ARM Macro Assembler    Page 2 


                                                            g
   37 00000026         
   38 00000026 F103 0301       ADD              R3, R3, #1  ; Increment divisor
                                                            
   39 0000002A E7F5            B                INNER_LOOP  ; Continue inner lo
                                                            op
   40 0000002C         
   41 0000002C         PRIME
   42 0000002C F841 2B04       STR              R2, [R1], #4 ; Store prime numb
                                                            er and increment ad
                                                            dress
   43 00000030 F107 0701       ADD              R7, R7, #1  ; Increment prime n
                                                            umber count
   44 00000034         
   45 00000034         NOT_PRIME
   46 00000034 F102 0201       ADD              R2, R2, #1  ; Move to next numb
                                                            er
   47 00000038 E7E9            B                OUTER_LOOP  ; Continue outer lo
                                                            op
   48 0000003A         
   49 0000003A         STOP
   50 0000003A         
   51 0000003A E7FE            B                STOP
   52 0000003C         
   53 0000003C 0000000A 
                       N       DCD              0x0A        ; Find primes up to
                                                             10 (change as need
                                                            ed)
   54 00000040         
   55 00000040 00000000 
              00000000         AREA             data, DATA, READWRITE
   56 00000000         RESULT
   57 00000000 00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00            SPACE            80          ; Allocate space fo



ARM Macro Assembler    Page 3 


                                                            r results (adjust a
                                                            s needed)
   58 00000050         COUNT
   59 00000050 00 00 00 
              00               SPACE            4           ; Allocate space to
                                                             store the count of
                                                             primes
   60 00000054         
   61 00000054                 END
Command Line: --debug --xref --cpu=Cortex-M3 --apcs=interwork --depend=prime.d 
-oprime.o -IC:\Keil\ARM\RV31\INC -IC:\Keil\ARM\CMSIS\Include -IC:\Keil\ARM\Inc\
NXP\LPC17xx --predefine="__EVAL SETA 1" --list=prime.lst prime.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

RESET 00000000

Symbol: RESET
   Definitions
      At line 1 in file prime.s
   Uses
      None
Comment: RESET unused
__Vectors 00000000

Symbol: __Vectors
   Definitions
      At line 4 in file prime.s
   Uses
      At line 2 in file prime.s
Comment: __Vectors used once
2 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

CHECK_DIVISIBLE 0000001E

Symbol: CHECK_DIVISIBLE
   Definitions
      At line 32 in file prime.s
   Uses
      At line 36 in file prime.s
Comment: CHECK_DIVISIBLE used once
INNER_LOOP 00000018

Symbol: INNER_LOOP
   Definitions
      At line 27 in file prime.s
   Uses
      At line 39 in file prime.s
Comment: INNER_LOOP used once
N 0000003C

Symbol: N
   Definitions
      At line 53 in file prime.s
   Uses
      At line 14 in file prime.s
Comment: N used once
NOT_PRIME 00000034

Symbol: NOT_PRIME
   Definitions
      At line 45 in file prime.s
   Uses
      At line 35 in file prime.s
Comment: NOT_PRIME used once
OUTER_LOOP 0000000E

Symbol: OUTER_LOOP
   Definitions
      At line 20 in file prime.s
   Uses
      At line 47 in file prime.s
Comment: OUTER_LOOP used once
PRIME 0000002C

Symbol: PRIME
   Definitions
      At line 41 in file prime.s
   Uses
      At line 29 in file prime.s
Comment: PRIME used once
Reset_Handler 00000000

Symbol: Reset_Handler
   Definitions
      At line 13 in file prime.s
   Uses
      At line 6 in file prime.s
      At line 11 in file prime.s

STOP 0000003A




ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

Symbol: STOP
   Definitions
      At line 49 in file prime.s
   Uses
      At line 22 in file prime.s
      At line 51 in file prime.s

mycode 00000000

Symbol: mycode
   Definitions
      At line 9 in file prime.s
   Uses
      None
Comment: mycode unused
9 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

COUNT 00000050

Symbol: COUNT
   Definitions
      At line 58 in file prime.s
   Uses
      None
Comment: COUNT unused
RESULT 00000000

Symbol: RESULT
   Definitions
      At line 56 in file prime.s
   Uses
      At line 16 in file prime.s
Comment: RESULT used once
data 00000000

Symbol: data
   Definitions
      At line 55 in file prime.s
   Uses
      None
Comment: data unused
3 symbols
347 symbols in table
